# -*- coding: utf-8 -*-
"""Forward_Chaining.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14HlzSvl1SIuWg4K0LNhn6wwTu3nrJT6C
"""

# Initial facts
initial_facts = ["X", "Y"]

# Rules in the format (condition, conclusion)
inference_rules = [
    (["X", "Y"], "Z"),  # If X and Y are true, then Z is true
    (["Z"], "W"),       # If Z is true, then W is true
    (["W"], "V")        # If W is true, then V is true
]

def apply_forward_chaining(current_facts, inference_rules):
    known_facts = set(current_facts)
    new_fact_found = True

    while new_fact_found:
        new_fact_found = False
        for rule in inference_rules:
            prerequisites, outcome = rule

            # Check if all prerequisites are met
            prerequisites_met = all(condition in known_facts for condition in prerequisites)

            # If all prerequisites are met and the outcome is not already known
            if prerequisites_met and outcome not in known_facts:
                known_facts.add(outcome)
                print(f"Derived new fact: {outcome}")
                new_fact_found = True  # Indicate that a new fact was added

    return known_facts


print("Starting facts:", initial_facts)
derived_facts = apply_forward_chaining(initial_facts, inference_rules)
print("Final derived facts:", derived_facts)